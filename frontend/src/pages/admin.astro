---
import Layout from "../layouts/Layout.astro";
import { Button } from "../../@/components/ui/button";
import {
	Card,
	CardContent,
	CardHeader,
	CardTitle,
} from "../../@/components/ui/card";
import {
	Table,
	TableBody,
	TableCell,
	TableHead,
	TableHeader,
	TableRow,
} from "../../@/components/ui/table";
import { Badge } from "../../@/components/ui/badge";
---

<Layout title="Admin Dashboard">
	<div class="container mx-auto py-10">
		<h1 class="text-3xl font-bold mb-6">Admin Dashboard</h1>
		<div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
			<Card>
				<CardHeader>
					<CardTitle>Total Users</CardTitle>
				</CardHeader>
				<CardContent>
					<p class="text-3xl font-bold">256</p>
				</CardContent>
			</Card>
			<Card>
				<CardHeader>
					<CardTitle>Active Sessions</CardTitle>
				</CardHeader>
				<CardContent>
					<p class="text-3xl font-bold">42</p>
				</CardContent>
			</Card>
			<Card>
				<CardHeader>
					<CardTitle>System Health</CardTitle>
				</CardHeader>
				<CardContent>
					<Badge variant="success">Good</Badge>
				</CardContent>
			</Card>
		</div>
		<div class="space-y-6">
			<div>
				<h2 class="text-2xl font-bold mb-4">Recent User Activity</h2>
				<Table>
					<TableHeader>
						<TableRow>
							<TableHead>User</TableHead>
							<TableHead>Action</TableHead>
							<TableHead>Timestamp</TableHead>
						</TableRow>
					</TableHeader>
					<TableBody>
						<TableRow>
							<TableCell>john.doe@example.com</TableCell>
							<TableCell>Updated inventory</TableCell>
							<TableCell>2023-06-15 14:30:22</TableCell>
						</TableRow>
						<TableRow>
							<TableCell>jane.smith@example.com</TableCell>
							<TableCell>Generated report</TableCell>
							<TableCell>2023-06-15 13:45:10</TableCell>
						</TableRow>
						<TableRow>
							<TableCell>admin@example.com</TableCell>
							<TableCell>Added new user</TableCell>
							<TableCell>2023-06-15 12:15:45</TableCell>
						</TableRow>
					</TableBody>
				</Table>
			</div>
			<div>
				<h2 class="text-2xl font-bold mb-4">System Logs</h2>
				<Table>
					<TableHeader>
						<TableRow>
							<TableHead>Timestamp</TableHead>
							<TableHead>Level</TableHead>
							<TableHead>Message</TableHead>
						</TableRow>
					</TableHeader>
					<TableBody>
						<TableRow>
							<TableCell>2023-06-15 15:00:01</TableCell>
							<TableCell><Badge>INFO</Badge></TableCell>
							<TableCell
								>Daily backup completed successfully</TableCell
							>
						</TableRow>
						<TableRow>
							<TableCell>2023-06-15 14:55:30</TableCell>
							<TableCell
								><Badge variant="warning">WARN</Badge
								></TableCell
							>
							<TableCell>High CPU usage detected</TableCell>
						</TableRow>
						<TableRow>
							<TableCell>2023-06-15 14:30:15</TableCell>
							<TableCell
								><Badge variant="destructive">ERROR</Badge
								></TableCell
							>
							<TableCell
								>Failed to connect to external API</TableCell
							>
						</TableRow>
					</TableBody>
				</Table>
			</div>
		</div>
		<div class="mt-8">
			<h2 class="text-2xl font-bold mb-4">Quick Actions</h2>
			<div class="flex flex-wrap gap-4">
				<Button>Manage Users</Button>
				<Button>System Settings</Button>
				<Button>View All Logs</Button>
				<Button variant="destructive">Clear Cache</Button>
			</div>
		</div>
	</div>
</Layout>

<script>
	import { createUser, fetchUsers } from "../lib/api";

	const createUserForm = document.getElementById(
		"createUserForm",
	) as HTMLFormElement;
	const userTableBody = document.getElementById("userTableBody");

	createUserForm.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(createUserForm);
		const newUser = {
			username: formData.get("username") as string,
			password: formData.get("password") as string,
			isAdmin: formData.get("isAdmin") === "on",
		};

		try {
			await createUser(newUser);
			createUserForm.reset();
			loadUsers();
		} catch (error) {
			console.error("Error creating user:", error);
			alert("Error creating user. Please try again.");
		}
	});

	async function loadUsers() {
		try {
			const users = await fetchUsers();
			userTableBody.innerHTML = users
				.map(
					(user) => `
            <tr>
                <td>${user.id}</td>
                <td>${user.username}</td>
                <td>${user.isAdmin ? "Yes" : "No"}</td>
            </tr>
        `,
				)
				.join("");
		} catch (error) {
			console.error("Error loading users:", error);
			userTableBody.innerHTML =
				'<tr><td colspan="3">Error loading users</td></tr>';
		}
	}

	loadUsers();
</script>
