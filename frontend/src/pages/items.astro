---
import Layout from "../layouts/Layout.astro";
import { Button } from "../../@/components/ui/button";
import { Input } from "../../@/components/ui/input";
import {
	Table,
	TableBody,
	TableCell,
	TableHead,
	TableHeader,
	TableRow,
} from "../../@/components/ui/table";
import { PlusIcon, SearchIcon } from "lucide-react";
---

<Layout title="Inventory Items">
	<div class="container mx-auto py-10">
		<h1 class="text-2xl font-bold mb-5">Inventory Items</h1>
		<div class="flex justify-between mb-4">
			<div class="relative w-64">
				<SearchIcon
					class="absolute left-2 top-2.5 h-4 w-4 text-muted-foreground"
				/>
				<Input placeholder="Search items" class="pl-8" />
			</div>
			<Button id="openModalBtn">
				<PlusIcon class="mr-2 h-4 w-4" /> Add New Item
			</Button>
		</div>
		<Table>
			<TableHeader>
				<TableRow>
					<TableHead>Item ID</TableHead>
					<TableHead>Name</TableHead>
					<TableHead>Category</TableHead>
					<TableHead>Quantity</TableHead>
					<TableHead>Location</TableHead>
					<TableHead>Actions</TableHead>
				</TableRow>
			</TableHeader>
			<TableBody id="itemsTableBody">
				<TableRow>
					<TableCell colspan="6">Loading...</TableCell>
				</TableRow>
			</TableBody>
		</Table>
	</div>
</Layout>

<script>
	import { createItem, fetchItems } from "../lib/api";

	const openModalBtn = document.getElementById("openModalBtn");
	const closeModalBtn = document.getElementById("closeModalBtn");
	const itemModal = document.getElementById("itemModal");
	const newItemForm = document.getElementById(
		"new-item-form",
	) as HTMLFormElement;
	const itemsTableBody = document.getElementById("itemsTableBody");

	openModalBtn.addEventListener("click", () => {
		itemModal.classList.remove("hidden");
	});

	closeModalBtn.addEventListener("click", () => {
		itemModal.classList.add("hidden");
	});

	newItemForm.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(newItemForm);
		const newItem = Object.fromEntries(formData.entries());

		try {
			await createItem(newItem);
			itemModal.classList.add("hidden");
			newItemForm.reset();
			loadItems();
		} catch (error) {
			console.error("Error creating item:", error);
			alert("Error creating item. Please try again.");
		}
	});

	async function loadItems() {
		try {
			const items = await fetchItems();
			itemsTableBody.innerHTML = items
				.map(
					(item) => `
        <tr>
          <td>${item.id}</td>
          <td>${item.name}</td>
          <td>${item.category}</td>
          <td>${item.quantity}</td>
          <td>${item.location}</td>
          <td>
            <Button variant="outline" size="sm" class="mr-2">Edit</Button>
            <Button variant="outline" size="sm">Delete</Button>
          </td>
        </tr>
      `,
				)
				.join("");
		} catch (error) {
			console.error("Error loading items:", error);
			itemsTableBody.innerHTML =
				'<tr><td colspan="6">Error loading items</td></tr>';
		}
	}

	loadItems();
</script>
